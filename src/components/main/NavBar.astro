---
import navData from "../../data/navData";
import Link from "./Link.astro";
import ThemeToggle from "../theme/ThemeToggle.astro";
---

<nav
  aria-label="Main navigation"
  class="sticky top-0 z-50 border-b border-blue-100 bg-blue-50 backdrop-blur-md transition-colors duration-300 dark:border-sky-900 dark:bg-[#0f172a]"
>
  <div class="container mx-auto px-4">
    <div class="flex h-16 items-center justify-between">
      <Link
        href="/"
        text="Home"
        icon={{ name: "mdi:home", position: "left" }}
        class="text-2xl font-bold tracking-tight text-blue-700 transition-colors duration-200 hover:text-blue-900 dark:text-sky-200 dark:hover:text-sky-100"
      />

      <!-- Hamburger for mobile -->
      <button
        id="navbar-menu-btn"
        class="ml-2 flex items-center justify-center rounded-md p-2 text-blue-700 transition-colors duration-200 hover:bg-blue-100 hover:text-blue-900 focus:outline-none md:hidden dark:text-sky-200 dark:hover:bg-sky-900/30 dark:hover:text-sky-100"
        aria-label="Open navigation menu"
        aria-controls="navbar-links"
        aria-expanded="false"
        type="button"
      >
        <svg
          id="navbar-menu-icon"
          xmlns="http://www.w3.org/2000/svg"
          class="h-7 w-7"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
        <svg
          id="navbar-close-icon"
          xmlns="http://www.w3.org/2000/svg"
          class="hidden h-7 w-7"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>

      <!-- Nav links -->
      <ul
        id="navbar-links"
        class="fixed top-16 left-0 z-40 max-h-0 w-full flex-col items-center overflow-hidden border-b border-blue-100 bg-blue-50 text-center shadow-lg transition-all duration-300 md:static md:z-auto md:flex md:max-h-none md:w-auto md:flex-row md:items-center md:gap-6 md:overflow-visible md:border-none md:bg-transparent md:shadow-none dark:bg-[#0f172a]"
      >
        {
          navData.map((item, idx) => (
            <li
              class={`w-full md:w-auto ${
                idx === 0
                  ? "border-t border-blue-100 md:border-none dark:border-sky-900" // Blog link: separator at top on mobile
                  : ""
              } ${
                idx < navData.length - 1
                  ? "border-b border-blue-100 md:border-none dark:border-sky-900"
                  : ""
              }`}
            >
              <Link
                href={item.href}
                text={item.label}
                icon={{
                  name: `mdi:${item.icon}`,
                  position: "left",
                  class: "hidden md:inline-block",
                }}
                class="flex w-full items-center justify-center gap-1 rounded-md px-3 py-5 text-sm font-medium text-blue-700 transition-colors duration-200 hover:bg-blue-100 hover:text-blue-900 dark:text-sky-300 dark:hover:bg-sky-900/30 dark:hover:text-sky-100"
              />
            </li>
          ))
        }
        <!-- Theme toggle with separator above and full width on mobile -->
        <li
          class="flex w-full justify-center border-t border-blue-100 px-1 md:mt-0 md:ml-4 md:w-auto md:border-none dark:border-sky-900"
        >
          <ThemeToggle class="w-full" />
        </li>
      </ul>
    </div>
  </div>
</nav>

<script is:inline>
  const btn = document.getElementById("navbar-menu-btn");
  const links = document.getElementById("navbar-links");
  const menuIcon = document.getElementById("navbar-menu-icon");
  const closeIcon = document.getElementById("navbar-close-icon");

  function openMenu() {
    links.classList.remove("max-h-0", "hidden");
    links.classList.add("flex", "max-h-[500px]");
    menuIcon.classList.add("hidden");
    closeIcon.classList.remove("hidden");
    btn.setAttribute("aria-expanded", "true");
  }

  function closeMenu() {
    links.classList.remove("max-h-[500px]", "flex");
    links.classList.add("max-h-0");
    menuIcon.classList.remove("hidden");
    closeIcon.classList.add("hidden");
    btn.setAttribute("aria-expanded", "false");
  }

  function toggleMenu() {
    if (links.classList.contains("max-h-0")) {
      openMenu();
    } else {
      closeMenu();
    }
  }

  btn?.addEventListener("click", toggleMenu);

  // Close menu on link click (mobile)
  links?.addEventListener("click", (e) => {
    if (e.target.tagName === "A" && window.innerWidth < 768) {
      closeMenu();
    }
  });

  // Ensure menu is visible on resize (desktop)
  window.addEventListener("resize", () => {
    if (window.innerWidth >= 768) {
      links.classList.remove("max-h-0", "hidden");
      links.classList.add("flex", "max-h-none");
      menuIcon.classList.remove("hidden");
      closeIcon.classList.add("hidden");
      btn.setAttribute("aria-expanded", "false");
    } else {
      closeMenu();
    }
  });

  // mark the current page
  const handleCurrentPath = () => {
    const currentPath = window.location.pathname;
    const linksList = document.querySelectorAll("#navbar-links a");
    linksList.forEach((link) => {
      if (link.getAttribute("href") === currentPath) {
        console.log(link.getAttribute("href"), currentPath);

        link.classList.add("active-link");
      } else {
        link.classList.remove("active-link");
      }
    });
  };
  handleCurrentPath();
  window.location.pathname.onChange(handleCurrentPath);
</script>
