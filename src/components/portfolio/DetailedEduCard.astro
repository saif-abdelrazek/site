---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

interface Props {
  eduEntry: CollectionEntry<"education">;
}
const { eduEntry } = Astro.props as Props;
const {
  title,
  institution,
  location,
  startDate,
  endDate,
  current,
  degree,
  type,
  tags,
  description,
  image,
  link,
} = eduEntry.data;
---

<div
  id={eduEntry.id}
  class="w-full rounded-2xl border border-blue-500 bg-white p-6 shadow-xl dark:bg-slate-900"
>
  <div class="mb-4 flex flex-col gap-6 md:flex-row md:items-center">
    {
      image && (
        <Image
          src={image}
          alt={title || "Education Image"}
          class="h-24 w-24 rounded-full border-2 border-blue-400 object-cover shadow-md dark:border-sky-900"
          loading="lazy"
        />
      )
    }
    <div class="flex-1 text-left">
      <h2 class="text-2xl font-bold text-sky-700 dark:text-sky-300">{title}</h2>
      {
        institution && (
          <div class="font-semibold text-blue-600 dark:text-sky-400">
            {institution}
          </div>
        )
      }
      {
        location && (
          <div class="text-xs text-gray-500 dark:text-gray-400">{location}</div>
        )
      }
      <div class="text-xs text-gray-600 dark:text-gray-400">
        {
          startDate
            ? new Date(startDate).toLocaleDateString(undefined, {
                year: "numeric",
                month: "short",
              })
            : ""
        }
        {" â€“ "}
        {
          current
            ? "Present"
            : endDate
              ? new Date(endDate).toLocaleDateString(undefined, {
                  year: "numeric",
                  month: "short",
                })
              : ""
        }
      </div>
      {
        degree && (
          <div class="text-xs font-semibold text-blue-600 dark:text-sky-300">
            {degree}
          </div>
        )
      }
      {
        type && (
          <div class="text-xs text-blue-400 dark:text-sky-400">{type}</div>
        )
      }
      {
        tags && tags.length > 0 && (
          <div class="mt-2 flex flex-wrap gap-2">
            {tags.map((tag) => (
              <span class="rounded bg-blue-100 px-2 py-1 text-xs font-semibold text-blue-700 dark:bg-sky-900/60 dark:text-sky-200">
                {tag}
              </span>
            ))}
          </div>
        )
      }
      <div class="mt-2 flex flex-wrap gap-2">
        <a
          href={`/education/${eduEntry.id}?from=all`}
          class="inline-flex items-center gap-2 rounded-lg bg-blue-500 px-3 py-1.5 text-xs font-semibold text-white transition hover:bg-blue-600 dark:bg-sky-700 dark:hover:bg-sky-800"
        >
          <Icon name="mdi:information-outline" class="h-4 w-4" />
          Additional Information
        </a>
        {
          link && (
            <a
              href={link}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-2 rounded-lg bg-gradient-to-r from-sky-500 to-blue-600 px-3 py-1.5 text-xs font-semibold text-white transition hover:from-sky-600 hover:to-blue-700"
            >
              <Icon name="mdi:open-in-new" class="h-4 w-4" />
              External Link
            </a>
          )
        }
      </div>
    </div>
  </div>
  {
    description && (
      <p class="mb-4 text-base text-gray-700 dark:text-gray-200">
        {description}
      </p>
    )
  }
</div>
