---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
interface PostProps {
  post: CollectionEntry<"posts">;
}

const { post } = Astro.props as PostProps;
const tags = post.data.tags ? post.data.tags.slice(0, 3) : [];
---

<div
  class="flex h-full flex-col rounded-2xl border border-blue-200 bg-white shadow-lg transition-transform duration-200 hover:-translate-y-1 hover:scale-[1.03] hover:shadow-xl dark:border-sky-900 dark:bg-slate-900"
>
  {
    post.data.image && (
      <Image
        src={post.data.image}
        alt={"Blog post " + post.data.title}
        width={400}
        height={220}
        class="h-44 w-full rounded-t-2xl object-cover"
      />
    )
  }
  <div class="flex h-full flex-col p-6">
    <h2
      class="mb-2 line-clamp-2 text-xl font-bold text-blue-700 dark:text-sky-200"
    >
      {post.data.title}
    </h2>
    <div
      class="mb-2 flex flex-wrap gap-2 text-xs text-gray-500 dark:text-gray-400"
    >
      <span>{post.data.date?.toLocaleDateString?.() ?? "Unknown date"}</span>
      {
        tags.length > 0 &&
          tags.map((tag) => (
            <span class="rounded bg-blue-100 px-2 py-0.5 font-medium text-blue-700 dark:bg-sky-900/60 dark:text-sky-200">
              {tag}
            </span>
          ))
      }
      {
        post.data.tags && post.data.tags.length > 3 && (
          <span class="rounded bg-blue-50 px-2 py-0.5 font-medium text-blue-500 dark:bg-sky-900/30 dark:text-sky-400">
            +{post.data.tags.length - 3} more
          </span>
        )
      }
    </div>
    <p class="mb-4 line-clamp-3 text-sm text-gray-700 dark:text-gray-300">
      {post.data.description}
    </p>
    <div class="mt-auto flex justify-end">
      <a
        href={`/blog/${post.id}/`}
        class="inline-block rounded bg-blue-600 px-4 py-2 text-sm font-semibold text-white shadow transition hover:bg-blue-700 dark:bg-sky-700 dark:hover:bg-sky-800"
      >
        Read More
      </a>
    </div>
  </div>
</div>
