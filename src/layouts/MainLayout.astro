---
import "../styles/global.css";
import { ClientRouter } from "astro:transitions";
import "@fontsource/poppins";
import NavBar from "../components/shared/NavBar.astro";
import SearchOverlay from "../components/blog/search/SearchOverlay.astro";
import { pwaInfo } from "virtual:pwa-info";
import SpeedInsights from "@vercel/speed-insights/astro";

interface Props {
  title?: string;
  description?: string;
  image?: string;
  withNavBar?: boolean;
  linksInHead?: string[];
}

const {
  title = "Saif Abdelrazek | Website",
  description = "Personal website of Saif Abdelrazek || Not just a website",
  image,
  withNavBar = true,
  linksInHead = [],
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <!-- Critical theme initialization -->
    <script is:inline>
      (function () {
        const html = document.documentElement;
        html.classList.remove("light", "dark");

        try {
          const themePref = localStorage.getItem("theme");
          const effectiveTheme =
            themePref === "light"
              ? "light"
              : themePref === "dark"
                ? "dark"
                : window.matchMedia("(prefers-color-scheme: dark)").matches
                  ? "dark"
                  : "light";

          html.classList.add(effectiveTheme);

          // Set data attribute for system preference
          if (!themePref) {
            html.dataset.themeOrigin = "system";
          }
        } catch (e) {
          html.classList.add("dark");
        }
      })();
    </script>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="keywords"
      content="Saif Abdelrazek, Saif, Abdelrazek, Saif Dev, Saif Developer, Abdelrazek Portfolio, Saif Portfolio, Saif Dev Portfolio, Saif Abdelrazek Portfolio, Saif Abdelrazek Website, Saif Dev Website, Saif Abdelrazek Blog, Saif Dev Blog, Saif Blog, Saif Amr, Saif Amr Samy,"
    />

    <title>{title}</title>

    <meta name="description" content={description} />

    <link rel="preconnect" href="https://fonts.googleapis.com" />

    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <link
      href="https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:ital,wght@0,400;0,700;1,400;1,700&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Space+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap"
      rel="stylesheet"
    />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <meta name="apple-mobile-web-app-title" content="Saif Abdelrazek" />

    <ClientRouter />
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}

    <script>
      // Listen for navigation events
      document.addEventListener("astro:after-swap", () => {
        const currentTheme =
          localStorage.getItem("theme") ||
          (window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light");
        document.documentElement.className = currentTheme;
      });
    </script>

    <script
      defer
      src="https://umami.saifdev.org/script.js"
      data-website-id="40f66a27-85f1-41cf-84da-8b3ad7d73f80"></script>
    {linksInHead.map((link) => <Fragment set:html={link} />)}
    <script src="/src/pwa.ts"></script>
  </head>
  <body>
    <SpeedInsights />
    {withNavBar && <NavBar />}

    <SearchOverlay />
    <main>
      <slot />
    </main>
  </body><script>
    import {
      OpenSearch,
      InitSearch,
    } from "../components/blog/search/overlay.ts";
    let initialized = false;
    function setupSearch() {
      if (!initialized) {
        InitSearch({
          create_link: (item) => {
            const frontmatter = item.frontmatter;
            if (frontmatter?.slug && typeof frontmatter.slug === "string") {
              return `/blog/${frontmatter.slug}`;
            }
            const slug = `/blog/${item.file.replace(/\.mdx?$/, "")}`;
            return slug.startsWith("/") ? slug.slice(1) : slug;
          },
          max: 12,
        });
        initialized = true;
      }
      // Remove previous event listener to avoid duplicates
      const btn = document.getElementById("open-search-overlay");
      if (btn) {
        btn.addEventListener("click", OpenSearch);
      }
    }

    document.addEventListener("astro:after-swap", () => {
      initialized = false;
      setupSearch();
    });

    document.addEventListener("DOMContentLoaded", () => setupSearch());
  </script>
</html>
